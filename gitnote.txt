git版本控制-集中式和分布式
集中式：只有一个中心版本库，有更新需提交至该中心版本库中保存；
分布式：版本库处于本地，更新后可以推送至远端版本库；

git配置信息
全局配置：家目录/.gitconfig
配置全局信息命令：
git config --global user.name “gaoxiang”;
git config --global user.email "704294893@qq.com";

库的配置文件：.git/config
配置库信息命令：
git config user.name "gaoxiang";
git config user.email "704294893@qq.com";


git创建新仓库
初始化空仓库：git init
获取远程库
git clone 版本库地址

.gitignore（不追踪文件）在提交时可以使用“git add .” 来提交全部文件
指定追踪的文件：如！test.php
忽略某个文件：如test.php
忽略一类文件：如*.php
忽略文件夹：如/文件夹1
忽略文件夹及其子目录的某个文件：如/文件夹1/**/test.php
忽略文件夹及其子目录的某类文件：如/文件夹1/**/*.php

将文件添加到暂存区：git add 文件名
将暂存区提交到版本库：git commit -m “提交说明详情”
查看版本库状态：git status
移除暂存区的文件(unstage)：git rm --cached <file>   git reset HEAD  <file>
丢弃工作目录中的修改：git checkout --<file>
回退版本：git reset --hard <file>  备注：HEAD^ (HEAD^表示回退到上个版本,同理上上个版本则为HEAD^^
从版本库和工作区同时中删除文件：git rm <file>
从版本库中删除但保留工作区的文件：git rm --cached <file>
更改文件名：git mv 原文件名  修改后文件名


将本地的版本库添加到github上
1、将本地生成的sshkey的公钥添加至github上
2、将本地库与远程库github关联 git remote add origin git@github.com:Queen-v/GitLearningNote.git
3、将本地库推送至远程库github git push -u origin master -f 

版本库提交日志的查看
查看日志：git log 
查看提交的文件修改详情：git log -p
查看简要的日志信息：git log --oneline 
查看提交的文件状态变化 git log --name-status
查看日志文件名字：git log --name-only


修改最新的一次提交的注释
git commit --amend 在跳转的页面修改注释信息，然后:wq!保存；
遗忘了文件需要重新提交并修改上次提交的注释，则
git add 遗忘的文件
git commit --amend 

暂存区文件管理
从暂存区撤销：git reset HEAD  <file>
将工作目录指定的文件修改撤销：git checkout -- <file>

git别名定义
给add配置别名a ：git config --global alias.a add 
在.gitconfig文件中也可定义
[alias]
		a = add .
		c = commit
		s = status
		
git的分支
查看分支：git branch <name>
切换分支: git checkout <name>
创建分支并切换至该创建分支：git checkout -b <file>
删除分支：git branch -d <name>
快速合并某分支到当前分支：git merge <branchname> 备注：该合并不会再合并后的当前分支产生新的提交信息；
非快速合并某分支到当前分支： git merge --no-ff <branchname> 备注：该合并会在合并后的当前分支产生一个新的提交信息
查看哪些分支已经合并到当前分支：git branch --merged
查看哪些分支没有合并到当前分支：git branch --no-merged
未合并的分支现在需要强制删除：git branch -D <name>

stash 临时存储工作区
暂存当前工作内容命令：git stash
暂存列表信息：git stash list

恢复到工作内容：git stash apply 
删除临时暂存区内容：git stash drop /git stash drop stash@{0}
恢复的同时把stash内容也删了：git stash pop

标签tag
查看有哪些标签：git tag
创建标签：git tag v2.0 xxxxx
创建带说明的标签：git tag -a v2.0 -m "version 2.0 released" xxxxx
查看标签详情：git show v2.0

发布压缩包
git aechive master --prefix=‘hdcms/’ --forma=zip >hdcms.zip

系统别名
在家目录下的.bash_profile 
添加内容
alias gs ="git status"
alias gc ="git commit -m"
alias gl ="git log --graph --pretty=oneline

rebase优化合并分支记录
如果master已经修改，则应该在dev分支执行git  rebase ，然后回到master分支进行合并dev，则master的合并记录就为一条直线；
在dev分支上执行git rebase master；
切换到master上执行git merge --no-ff  dev



远程仓库的添加

删除关联的远程仓库：git remote remove origin


克隆远程仓库
git clone 地址

本地仓库推送至远程
查看有哪些远程仓库：git remote -v
关联远程仓库：git remote add origin 仓库url
删除关联的远程仓库：git remote remove origin
推送数据到远程仓库：git push -u origin master

查看本地分支和远程分支：git branch -a

当前分支与远程分支进行关联：git push --set-upstream origin dev
